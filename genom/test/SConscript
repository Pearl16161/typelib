import os
import os.path
import filecmp

preproc=Builder(action = 'gcc -E -x c -Igenom/test $SOURCE -o $TARGET',
        suffix='.i',
        src_suffix=[ '.c', '.gen' ],
        single_source=1)

# Depends on typeshow
Import(['reader', 'env'])

def typeshow_dep(node, env, path):
    return reader

solver =Builder(action = str(reader[0]) + " $SOURCE > $TARGET",
        suffix='.out-tmp',
        src_suffix='.i',
        target_scanner=Scanner(function=typeshow_dep),
        single_source=1)

def check_diff(target, source, env):
    old = str(target[0])
    new = old + '.tmp'
    if os.access(old, os.R_OK):
        if filecmp.cmp(old, new):
            return 1 

    return 0

testaction = Action([ str(reader[0]) +  ' $SOURCE > ${TARGET}.tmp',
                         check_diff,
                         Move('$TARGET', '${TARGET}.tmp') ])

test   =Builder(action = testaction,
        suffix='.out',
        src_suffix='.i',
        single_source=1)

env.Append(BUILDERS = { 'Preproc': preproc, 'Solver': solver, 'Test': test })

tests=Split('move.gen')

ifiles   = env.Preproc( tests )
outfiles = env.Test(ifiles)
env.AlwaysBuild(outfiles);

