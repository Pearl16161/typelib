# -*- Makefile -*-
# $Id: Makefile,v 1.1.1.1 2005/01/09 14:35:40 fpy Exp $

top_srcdir=@top_srcdir@
top_builddir=@top_builddir@
srcdir=@srcdir@
builddir=@builddir@
builddir ?= .

include $(top_builddir)/Init.make

############ Build module modname
MODULE = cimport
# If LIB_NAME is not set, lib.mk uses $(PACKAGE)_$(MODULE)
# LIB_NAME = cimport

ifeq ($(findstring clean,$(MAKECMDGOALS)),)
Makefile: cparser
endif

# Grammar build
cimport_ANTLR = cparser \
			CPPParser.cc CPPLexer.cc CPPParser.hh CPPLexer.hh \
			CPPLexerTokenTypes.hh CPPLexerTokenTypes.txt STDCTokenTypes.hh STDCTokenTypes.txt

cparser: cparser.g
	$(ANTLR) -o $(builddir) $(srcdir)/cparser.g
	for i in $(filter %.cc,$(cimport_ANTLR)); do \
		mv $${i/.cc/.cpp} $$i; \
		sed -i 's/\.hpp"/.hh"/' $$i; \
	done

	for i in $(filter %.hh,$(cimport_ANTLR)); do \
		mv $${i/.hh/.hpp} $$i; \
		sed -i 's/\.hpp"/.hh"/' $$i; \
	done
	touch cparser

clean: antlr-clean
antlr-clean:
	rm -f $(cimport_ANTLR)

cimport_SRC = cimporter.cc Dictionary.cc Support.cc \
			typesolver.cc CPPParser.cc CPPLexer.cc \
			CPPParser.cc CPPLexer.cc

# read info libtool about these variables
cimport_VERSION = 0
cimport_AGE = 0
cimport_REVISION = 1

cimport_CPPFLAGS = $(TYPELIB_CXXFLAGS) $(ANTLR_CFLAGS) $(UTILMM_CXXFLAGS)
cimport_LDFLAGS = $(ANTLR_LDFLAGS) $(UTILMM_LDFLAGS) -lutilmm_configfile -lutilmm_system \
		  $(BOOST_FILESYSTEM_LDFLAGS)
cimport_LIBS= $(TYPELIB_LIBS)

############ end: cimport

## Build the library
include $(top_srcdir)/mk/lib.mk

## You may want to add autotools handling if the Makefile is autogenerated
include $(top_srcdir)/mk/autotools.mk
## You may want to use automatic dependencies as well
# The sources of files built using app.mk and lib.mk are automatically added
# To add more sources to consider, use
# DEP_SRC += <more sources>
include $(top_srcdir)/mk/depend.mk

