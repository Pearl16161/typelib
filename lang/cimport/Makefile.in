# -*- Makefile -*-
# $Id: Makefile,v 1.1.1.1 2005/01/09 14:35:40 fpy Exp $

top_srcdir=@top_srcdir@
top_builddir=@top_builddir@
srcdir=@srcdir@
builddir=@builddir@
builddir ?= .

include $(top_builddir)/mk/init.mk

############ Build the C grammar
GRAMMAR = cparser
cparser_SRC = cparser.g
############ End of build the C grammar
include $(top_srcdir)/mk/antlr.mk

############ Build module modname
MODULE = lang_c
LIB_NAME = typeLang_c
# If LIB_NAME is not set, lib.mk uses $(PACKAGE)_$(MODULE)
# LIB_NAME = lang_c

VPATH+=:$(builddir)

lang_c_SRC = import.cc Dictionary.cc Support.cc \
	    typesolver.cc packing.cc $(cparser_CC)

# read info libtool about these variables
lang_c_VERSION = 0
lang_c_AGE = 0
lang_c_REVISION = 1

lang_c_CPPFLAGS = $(TYPELIB_CXXFLAGS) $(ANTLR_CFLAGS) $(UTILMM_CXXFLAGS) -I$(builddir) -I$(srcdir)
# do not link against libantlr. The guys doing the Debian package know nothing about PIC :(
lang_c_LDFLAGS = $(UTILMM_LDFLAGS) $(BOOST_FILESYSTEM_LDFLAGS)
lang_c_LIBS= $(TYPELIB_LIBS)

############ end: lang_c

## Build the library
include $(top_srcdir)/mk/lib.mk

## You may want to add autotools handling if the Makefile is autogenerated
include $(top_srcdir)/mk/autotools.mk
## You may want to use automatic dependencies as well
# The sources of files built using app.mk and lib.mk are automatically added
# To add more sources to consider, use
# DEP_SRC += <more sources>
include $(top_srcdir)/mk/depend.mk

